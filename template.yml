AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
  
Globals:
  Function:
    Timeout: 30
    MemorySize: 512

Resources:
  LootTableDbKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: loot-table-db-key
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join 
                - ''
                - - 'arn:aws:iam::'
                  - !Ref 'AWS::AccountId'
                  - ':root'
            Action: 'kms:*'
            Resource: '*'

  LootTableTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: loot_table
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: True
      SSESpecification:
        KMSMasterKeyId: !GetAtt LootTableDbKey.Arn
        SSEEnabled: true
        SSEType: KMS
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

  LootTableApiRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LootTableApiRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LootTableApiCloudwatchLogsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:PutResourcePolicy
                  - logs:DeleteResourcePolicy
                  - logs:FilterLogEvents
                  - logs:DescribeLogStreams
                  - logs:DescribeLogStreams
                  - logs:GetLogEvents
                Resource:
                  - "*"
        - PolicyName: LootTableDynamo
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                  - kms:*
                Resource:
                  - !GetAtt LootTableDbKey.Arn
                  - !GetAtt LootTableTable.Arn

  LootTableApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: LootTableApiGateway
      StageName: prod
      Auth:
        AddDefaultAuthorizerToCorsPreflight: false
        UsagePlan:
            CreateUsagePlan: PER_API
            UsagePlanName: LootTableApiUsagePlan
            Description: LootTableAPI Usage Plan
      Cors:
        AllowMethods: "'POST, OPTIONS, PUT, GET'"
        AllowHeaders: "'Content-Type, X-Api-Key, Authorization'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"

  LootTableApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 60
      CodeUri: app
      Handler: index.lambdaHandler
      Runtime: nodejs16.x
      Role: !GetAtt LootTableApiRole.Arn
      Architectures:
        - x86_64
      Events:
        Post:
          Type: Api 
          Properties:
            Path: /
            Method: POST
            RestApiId: !Ref LootTableApiGateway
            Auth:
              ApiKeyRequired: true  